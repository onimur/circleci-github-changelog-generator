description: |
  Update and push changelog
executor: <<parameters.executor>>
parameters:
  executor:
    default: default
    description: |
      Executor to use for this job. Defaults to this orb's default executor.
    type: executor
  steps-before:
    default: []
    description: |
      Any step before execute job. It can be used to export or retrieve some environment variable.
    type: steps
  steps-after:
    default: []
    description: |
      Any step after execute job. It can be used to export or retrieve some environment variable.
    type: steps
  user:
    default: CIRCLE_PROJECT_USERNAME
    description: |
      Username of the owner of target GitHub repo.
    type: env_var_name
  project:
    default: CIRCLE_PROJECT_REPONAME
    description: |
      Name of project on GitHub.
    type: env_var_name
  token:
    default: GITHUB_TOKEN
    description: |
      To make more than 50 requests per hour your GitHub token is required.
    type: env_var_name
  git-push:
    default: false
    description: |
      If true, Push the changelog to remote repository. Else store changelog to dir tmp/.persist/
    type: boolean
  #Parameters only to push changelog
  bot-name:
    default: CircleCI-bot
    description: |
      User name to commit
    type: string
  bot-email:
    default: circleci@bot-noreply.com
    description: |
      Email to commit
    type: string
  commit-message:
    default: Auto Update changelog
    description: Commit message
    type: string
  branch:
    default: master
    description: |
      Branch to push changelog
    type: string

steps:
  - steps: <<parameters.steps-before>>
  - when:
      condition: <<parameters.git-push>>
      steps:
        - git-checkout:
            branch: <<parameters.branch>>
  - changelog:
      user: <<parameters.user>>
      project: <<parameters.project>>
      token: <<parameters.token>>
  - when:
      condition: <<parameters.git-push>>
      requires: [changelog]
      steps:
        - git-push:
            user: <<parameters.user>>
            project: <<parameters.project>>
            bot-name: <<parameters.bot-name>>
            bot-email: <<parameters.bot-email>>
            commit-message: <<parameters.commit-message>>
            token: <<parameters.token>>
            branch: <<parameters.branch>>
  - unless:
      condition: <<parameters.git-push>>
      requires: [changelog]
      steps:
        - persist/persist-to-dir:
            file-or-dir: CHANGELOG.md
            store-artifacts: true
  - steps: <<parameters.steps-after>>
